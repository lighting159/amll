name: 构建 AMLL Player Tauri 桌面版本
on:
  - push
  - workflow_dispatch

jobs:
  build-tauri:
    name: 构建 Tauri 桌面版本
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: ubuntu-22.04
            args: ''
            name: linux
            arch: x86_64
          - platform: windows-latest
            args: ''
            name: windows
            arch: x86_64
          - platform: macos-latest # arm64 二进制包
            args: '--target aarch64-apple-darwin'
            name: macOS
            arch: aarch64
          - platform: macos-latest # x86 二进制包
            args: '--target x86_64-apple-darwin'
            name: macOS
            arch: x86_64
          - platform: macos-latest # 通用二进制包
            args: '--target universal-apple-darwin'
            name: macOS
            arch: universal

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
        name: 克隆仓库
      - name: 缓存 Cargo 产物
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: 安装 PNPM
        uses: pnpm/action-setup@v4
        with:
          version: latest
      - name: 安装 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: pnpm
      - name: 安装 Rust 工具链
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
      - name: 安装 wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: latest
      - name: 安装 wasm32 目标
        run: rustup target add wasm32-unknown-unknown
      # macOS 自带的 Xcode LLVM 不支持 WASM 目标
      - name: "macOS: 安装 LLVM 和 Clang"
        uses: KyleMayes/install-llvm-action@v2
        if: matrix.platform == 'macos-latest'
        with:
          version: "15"
      - name: 安装 Tauri 所需系统依赖（仅 Linux）
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev libappindicator3-dev libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      - name: 构建 AMLL Full React 包
        run: |
          pnpm i
          pnpm lerna run build --scope @applemusic-like-lyrics/*
        env:
          AMLL_GITHUB_IS_ACTION: true
      - name: 构建 AMLL Player 程序
        uses: tauri-apps/tauri-action@v0
        with:
          projectPath: packages/player
          args: ${{ matrix.args }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 上传产物到 Action Artifact
        uses: actions/upload-artifact@v3
        with:
          name: AMLL Player ${{matrix.name}}-${{matrix.arch}}
          path: |
            packages/player/src-tauri/target/**/release/bundle/deb/*.deb
            packages/player/src-tauri/target/**/release/bundle/appimage/*.AppImage
            packages/player/src-tauri/target/**/release/bundle/appimage/*.AppImage.tar.gz
            packages/player/src-tauri/target/**/release/bundle/msis/*.exe
            packages/player/src-tauri/target/**/release/bundle/msi/*.msi
            packages/player/src-tauri/target/**/release/bundle/dmg/*.dmg
            packages/player/src-tauri/target/**/release/bundle/macos/*.app
            packages/player/src-tauri/target/**/release/bundle/macos/*.app.tar.gz
            packages/player/src-tauri/target/**/release/bundle/dmg/*.dmg
            packages/player/src-tauri/target/**/release/bundle/macos/*.app
            packages/player/src-tauri/target/**/release/bundle/macos/*.app.tar.gz
