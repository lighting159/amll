Current runner version: '2.319.1'
Operating System
Runner Image
Runner Image Provisioner
GITHUB_TOKEN Permissions
  Actions: write
  Attestations: write
  Checks: write
  Contents: write
  Deployments: write
  Discussions: write
  Issues: write
  Metadata: read
  Packages: write
  Pages: write
  PullRequests: write
  RepositoryProjects: write
  SecurityEvents: write
  Statuses: write
Secret source: Actions
Prepare workflow directory
Prepare all required actions
Getting action download info
Download action repository 'actions/checkout@v3' (SHA:f43a0e5ff2bd294095638e18286ca9a3d1956744)
Download action repository 'actions/cache@v4' (SHA:0c45773b623bea8c8e75f6c82b208c3cf94ea4f9)
Download action repository 'pnpm/action-setup@v4' (SHA:fe02b34f77f8bc703788d5817da081398fad5dd2)
Download action repository 'actions/setup-node@v4' (SHA:1e60f620b9541d16bece96c5465dc8ee9832be0b)
Download action repository 'dtolnay/rust-toolchain@stable' (SHA:ed2356ad628626a6b3f5be6c3e0255c0454fcdb9)
Download action repository 'jetli/wasm-pack-action@v0.4.0' (SHA:0d096b08b4e5a7de8c28de67e11e945404e9eefa)
Download action repository 'KyleMayes/install-llvm-action@v2' (SHA:e0a8dc9cb8a22e8a7696e8a91a4e9581bec13181)
Download action repository 'tauri-apps/tauri-action@v0' (SHA:a130ac329546b42aff78d7ef0596fb9b764c1355)
Download action repository 'actions/upload-artifact@v3' (SHA:ff15f0306b3f739f7b6fd43fb5d26cd321bd4de5)
Complete job name: 构建 Tauri 桌面版本 (windows-latest, windows, x86_64)
6s
Run actions/checkout@v3
Syncing repository: Steve-xmh/applemusic-like-lyrics
Getting Git version info
Temporarily overriding HOME='D:\a\_temp\5fc9f1b0-9577-44ca-bd32-013fed454b64' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
"C:\Program Files\Git\bin\git.exe" config --global --add safe.directory D:\a\applemusic-like-lyrics\applemusic-like-lyrics
Deleting the contents of 'D:\a\applemusic-like-lyrics\applemusic-like-lyrics'
Initializing the repository
Disabling automatic garbage collection
Setting up auth
Fetching the repository
Determining the checkout info
Checking out the ref
"C:\Program Files\Git\bin\git.exe" log -1 --format='%H'
'5d29f37f6fd315add2b9862e651e7fd3894effb9'
5s
Run actions/cache@v4
Received 138412032 of 224451059 (61.7%), 132.0 MBs/sec
Cache Size: ~214 MB (224451059 B)
"C:\Program Files\Git\usr\bin\tar.exe" -xf D:/a/_temp/d1d5e936-5b11-4be8-bccf-87cc12924a28/cache.tzst -P -C D:/a/applemusic-like-lyrics/applemusic-like-lyrics --force-local --use-compress-program "zstd -d"
Received 224451059 of 224451059 (100.0%), 106.5 MBs/sec
Cache restored successfully
Cache restored from key: Windows-cargo-9e76c400076bf9ed3f8bc7fa42b36a915d48a540a36af045ced300e7b58d7941
6s
Run pnpm/action-setup@v4
Running self-installer...
Installation Completed!
40s
Run actions/setup-node@v4
Attempt to resolve LTS alias from manifest...
Found in cache @ C:\hostedtoolcache\windows\node\20.17.0\x64
Environment details
C:\Windows\system32\cmd.exe /D /S /C "C:\Users\runneradmin\setup-pnpm\node_modules\.bin\pnpm.CMD store path --silent"
D:\.pnpm-store\v3
Received 130023424 of 178875155 (72.7%), 123.8 MBs/sec
Cache Size: ~171 MB (178875155 B)
"C:\Program Files\Git\usr\bin\tar.exe" -xf D:/a/_temp/0261ee05-b6d3-47f7-908c-d779c665733c/cache.tzst -P -C D:/a/applemusic-like-lyrics/applemusic-like-lyrics --force-local --use-compress-program "zstd -d"
Received 178875155 of 178875155 (100.0%), 85.0 MBs/sec
Cache restored successfully
Cache restored from key: node-cache-Windows-pnpm-ac65d0f26386d767e48f2fbbae89afdbc9b2ad7bb90a7d1b68be7695c0e0ee21
23s
Run dtolnay/rust-toolchain@stable
Run : parse toolchain version
Run : construct rustup command line
Run : set $CARGO_HOME
Run rustup toolchain install stable --profile minimal --no-self-update
info: syncing channel updates for 'stable-x86_64-pc-windows-msvc'
info: latest update on 2024-09-05, rust version 1.81.0 (eeb90cda1 2024-09-04)
info: downloading component 'clippy'
info: downloading component 'rustfmt'
info: downloading component 'rust-std' for 'x86_64-pc-windows-gnu'
info: downloading component 'rust-std' for 'i686-pc-windows-msvc'
info: downloading component 'cargo'
info: downloading component 'rust-std'
info: downloading component 'rustc'
info: removing previous version of component 'clippy'
info: removing previous version of component 'rustfmt'
info: removing previous version of component 'rust-std' for 'x86_64-pc-windows-gnu'
info: removing previous version of component 'rust-std' for 'i686-pc-windows-msvc'
info: removing previous version of component 'cargo'
info: removing previous version of component 'rust-std'
info: removing previous version of component 'rustc'
info: installing component 'clippy'
info: installing component 'rustfmt'
info: installing component 'rust-std' for 'x86_64-pc-windows-gnu'
info: installing component 'rust-std' for 'i686-pc-windows-msvc'
info: installing component 'cargo'
info: installing component 'rust-std'
info: installing component 'rustc'

  stable-x86_64-pc-windows-msvc updated - rustc 1.81.0 (eeb90cda1 2024-09-04) (from rustc 1.80.1 (3f5fd8dd4 2024-08-06))

Run rustup default stable
info: using existing install for 'stable-x86_64-pc-windows-msvc'
info: default toolchain set to 'stable-x86_64-pc-windows-msvc'

  stable-x86_64-pc-windows-msvc unchanged - rustc 1.81.0 (eeb90cda1 2024-09-04)

Run : create cachekey
Run : disable incremental compilation
Run : enable colors in Cargo output
Run : enable Cargo sparse registry
Run : work around spurious network errors in curl 8.0
Run rustc +stable --version --verbose
rustc 1.81.0 (eeb90cda1 2024-09-04)
binary: rustc
commit-hash: eeb90cda1969383f56a2637cbd3037bdf598841c
commit-date: 2024-09-04
host: x86_64-pc-windows-msvc
release: 1.81.0
LLVM version: 18.1.7
0s
Run jetli/wasm-pack-action@v0.4.0
Searching the latest version of wasm-pack ...
Installing wasm-pack v0.13.0 ...
Downloading wasm-pack from https://github.com/rustwasm/wasm-pack/releases/download/v0.13.0/wasm-pack-v0.13.0-x86_64-pc-windows-msvc.tar.gz ...
Extracting wasm-pack to C:\Users\RUNNER~1\AppData\Local\Temp\setup-wasm-pack ...
C:\Windows\system32\tar.exe xz -C C:\Users\RUNNER~1\AppData\Local\Temp\setup-wasm-pack -f D:\a\_temp\899aba5f-9b4d-4eb3-a38f-582688acfca1
Installed wasm-pack to C:\Users\runneradmin\.cargo\bin\wasm-pack.exe 🎉
Done
3s
Run rustup target add wasm32-unknown-unknown
info: downloading component 'rust-std' for 'wasm32-unknown-unknown'
info: installing component 'rust-std' for 'wasm32-unknown-unknown'
0s
0s
4m 29s
Run pnpm i
Scope: all 12 workspace projects
Lockfile is up to date, resolution step is skipped
Progress: resolved 1, reused 0, downloaded 0, added 0
Packages: +1239
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Progress: resolved 1239, reused 568, downloaded 0, added 0
Progress: resolved 1239, reused 1234, downloaded 0, added 17
Progress: resolved 1239, reused 1235, downloaded 0, added 242
Progress: resolved 1239, reused 1235, downloaded 0, added 545
Progress: resolved 1239, reused 1235, downloaded 0, added 566
Progress: resolved 1239, reused 1235, downloaded 0, added 784
Progress: resolved 1239, reused 1235, downloaded 0, added 814
Progress: resolved 1239, reused 1235, downloaded 0, added 1032
Progress: resolved 1239, reused 1235, downloaded 0, added 1129
Progress: resolved 1239, reused 1235, downloaded 0, added 1237
Progress: resolved 1239, reused 1235, downloaded 0, added 1238
Progress: resolved 1239, reused 1235, downloaded 0, added 1239
Progress: resolved 1239, reused 1235, downloaded 0, added 1239, done

devDependencies:
+ @biomejs/biome 1.8.3
+ lerna 8.1.8

Done in 18.1s
lerna notice cli v8.1.8
lerna info versioning independent
lerna info ci enabled
lerna notice filter including "@applemusic-like-lyrics/*"
lerna info filter [ '@applemusic-like-lyrics/*' ]

 Lerna (powered by Nx)   Running target build for 10 projects and 8 tasks they depend on:

- @applemusic-like-lyrics/bncm
- @applemusic-like-lyrics/core
- @applemusic-like-lyrics/docs
- @applemusic-like-lyrics/fft
- @applemusic-like-lyrics/lyric
- @applemusic-like-lyrics/react
- @applemusic-like-lyrics/react-full
- @applemusic-like-lyrics/ttml
- @applemusic-like-lyrics/vue
- @applemusic-like-lyrics/ws-protocol



✅ > @applemusic-like-lyrics/ttml:fmt
✅ > @applemusic-like-lyrics/fft:fmt
✅ > @applemusic-like-lyrics/lyric:fmt
✅ > @applemusic-like-lyrics/core:fmt
✅ > @applemusic-like-lyrics/ttml:build
✅ > @applemusic-like-lyrics/react:fmt
✅ > @applemusic-like-lyrics/react-full:fmt
✅ > @applemusic-like-lyrics/vue:fmt
✅ > @applemusic-like-lyrics/bncm:fmt
✅ > @applemusic-like-lyrics/docs:build
✅ > @applemusic-like-lyrics/fft:build
✅ > @applemusic-like-lyrics/ws-protocol:build
✅ > @applemusic-like-lyrics/lyric:build
✅ > @applemusic-like-lyrics/core:build
✅ > @applemusic-like-lyrics/react:build
✅ > @applemusic-like-lyrics/vue:build
✅ > @applemusic-like-lyrics/react-full:build
✅ > @applemusic-like-lyrics/bncm:build


 Lerna (powered by Nx)   Successfully ran target build for 10 projects and 8 tasks they depend on


6m 41s
Run tauri-apps/tauri-action@v0
running npm [ 'run', 'tauri', 'build' ]

> player@0.0.0 tauri
> tauri build

    Running beforeBuildCommand `pnpm build`

> player@0.0.0 build D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player
> vite build

vite v5.4.3 building for production...
transforming...
✓ 1038 modules transformed.
rendering chunks...
computing gzip size...
dist/git-metadata.json                        0.03 kB │ gzip:   0.04 kB
dist/index.html                               0.45 kB │ gzip:   0.31 kB
dist/assets/amll_lyric_bg-DfBzQwYH.wasm     215.34 kB
dist/assets/ws_protocol_bg-CmN7geiO.wasm    279.03 kB
dist/assets/index-DtUz14TZ.css              747.09 kB │ gzip:  91.86 kB
dist/assets/index-CtYbUaK5.js             1,203.15 kB │ gzip: 377.19 kB

(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
✓ built in 9.07s
warning: output filename collision.
The bin target `amll-player` in package `amll-player v0.0.0 (D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player\src-tauri)` has the same output filename as the lib target `amll_player` in package `amll-player v0.0.0 (D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player\src-tauri)`.
Colliding filename is: D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player\src-tauri\target\release\deps\amll_player.pdb
The output filenames should be unique.
Consider changing their names to be unique or compiling them separately.
This may become a hard error in the future; see <https://github.com/rust-lang/cargo/issues/6313>.
If this looks unexpected, it may be a bug in Cargo. Please file a bug report at
https://github.com/rust-lang/cargo/issues/ with as much information as you
can provide.
cargo 1.81.0 (2dbb1af80 2024-08-20) running on `x86_64-pc-windows-msvc` target `x86_64-pc-windows-msvc`
First unit: Unit { pkg: Package { id: PackageId { name: "amll-player", version: "0.0.0", source: "D:\\a\\applemusic-like-lyrics\\applemusic-like-lyrics\\packages\\player\\src-tauri" }, ..: ".." }, target: TargetInner { name: "amll-player", doc: true, ..: with_path("D:\\a\\applemusic-like-lyrics\\applemusic-like-lyrics\\packages\\player\\src-tauri\\src/main.rs", Edition2021) }, profile: Profile { opt_level: "z", lto: Bool(true), codegen_units: Some(1), panic: Abort, strip: Resolved(Named("symbols")), ..: default_release() }, kind: Host, mode: Build, features: [], rustflags: [], rustdocflags: [], artifact: false, artifact_target_for_features: None, is_std: false, dep_hash: 12674939400808099427 }
Second unit: Unit { pkg: Package { id: PackageId { name: "amll-player", version: "0.0.0", source: "D:\\a\\applemusic-like-lyrics\\applemusic-like-lyrics\\packages\\player\\src-tauri" }, ..: ".." }, target: TargetInner { name_inferred: true, ..: lib_target("amll_player", ["staticlib", "cdylib", "lib"], "D:\\a\\applemusic-like-lyrics\\applemusic-like-lyrics\\packages\\player\\src-tauri\\src\\lib.rs", Edition2021) }, profile: Profile { opt_level: "z", lto: Bool(true), codegen_units: Some(1), panic: Abort, strip: Resolved(Named("symbols")), ..: default_release() }, kind: Host, mode: Build, features: [], rustflags: [], rustdocflags: [], artifact: false, artifact_target_for_features: None, is_std: false, dep_hash: 12064535819393432503 }
   Compiling proc-macro2 v1.0.86
   Compiling unicode-ident v1.0.12
   Compiling autocfg v1.3.0
   Compiling windows_x86_64_msvc v0.52.6
   Compiling cfg-if v1.0.0
   Compiling byteorder v1.5.0
   Compiling windows-targets v0.52.6
   Compiling serde v1.0.209
   Compiling siphasher v0.3.11
   Compiling syn v1.0.109
   Compiling version_check v0.9.5
   Compiling getrandom v0.2.15
   Compiling quote v1.0.37
   Compiling value-bag v1.9.0
   Compiling getrandom v0.1.16
   Compiling syn v2.0.76
   Compiling log v0.4.22
   Compiling rand_core v0.6.4
   Compiling rand_core v0.5.1
   Compiling rand_pcg v0.2.1
   Compiling lock_api v0.4.12
   Compiling thiserror v1.0.63
   Compiling parking_lot_core v0.9.10
   Compiling phf_shared v0.10.0
   Compiling phf_shared v0.8.0
   Compiling once_cell v1.19.0
   Compiling pin-project-lite v0.2.14
   Compiling windows_x86_64_msvc v0.48.5
   Compiling proc-macro-hack v0.5.20+deprecated
   Compiling bitflags v1.3.2
   Compiling num-traits v0.2.19
   Compiling memchr v2.7.4
   Compiling fnv v1.0.7
   Compiling futures-core v0.3.30
   Compiling typeid v1.0.2
   Compiling convert_case v0.4.0
   Compiling crossbeam-utils v0.8.20
   Compiling ident_case v1.0.1
   Compiling strsim v0.11.1
   Compiling darling_core v0.20.10
   Compiling windows-sys v0.52.0
   Compiling serde_derive v1.0.209
   Compiling zerocopy-derive v0.7.35
   Compiling thiserror-impl v1.0.63
   Compiling zerocopy v0.7.35
   Compiling ppv-lite86 v0.2.20
   Compiling rand_chacha v0.3.1
   Compiling rand v0.8.5
   Compiling rand_chacha v0.2.2
   Compiling cssparser v0.27.2
   Compiling rand v0.7.3
   Compiling phf_generator v0.10.0
   Compiling string_cache_codegen v0.5.2
   Compiling phf_codegen v0.10.0
   Compiling markup5ever v0.11.0
   Compiling phf_generator v0.8.0
   Compiling phf_macros v0.8.0
   Compiling phf_codegen v0.8.0
   Compiling selectors v0.22.0
   Compiling html5ever v0.26.0
   Compiling cssparser-macros v0.6.1
   Compiling derive_more v0.99.18
   Compiling hashbrown v0.14.5
   Compiling equivalent v1.0.1
   Compiling lazy_static v1.5.0
   Compiling smallvec v1.13.2
   Compiling serde_spanned v0.6.7
   Compiling toml_datetime v0.6.8
   Compiling darling_macro v0.20.10
   Compiling indexmap v2.4.0
   Compiling phf_shared v0.11.2
   Compiling windows-sys v0.59.0
   Compiling futures-io v0.3.30
   Compiling winnow v0.5.40
   Compiling itoa v1.0.11
   Compiling darling v0.20.10
   Compiling phf_generator v0.11.2
   Compiling num-complex v0.4.6
   Compiling num-integer v0.1.46
   Compiling scopeguard v1.2.0
   Compiling tinyvec_macros v0.1.1
   Compiling new_debug_unreachable v1.0.6
   Compiling semver v1.0.23
   Compiling serde_json v1.0.127
   Compiling tinyvec v1.8.0
   Compiling phf_macros v0.11.2
   Compiling serde_with_macros v3.9.0
   Compiling bytes v1.7.1
   Compiling rustfft v6.2.0
   Compiling slab v0.4.9
   Compiling ryu v1.0.18
   Compiling precomputed-hash v0.1.1
   Compiling strength_reduce v0.2.4
   Compiling mac v0.1.1
   Compiling typenum v1.17.0
   Compiling futf v0.1.5
   Compiling transpose v0.2.3
   Compiling unicode-normalization v0.1.23
   Compiling parking_lot v0.12.3
   Compiling toml_edit v0.20.2
   Compiling primal-check v0.3.4
   Compiling indexmap v1.9.3
   Compiling percent-encoding v2.3.1
   Compiling dtoa v1.0.9
   Compiling utf-8 v0.7.6
   Compiling libc v0.2.158
   Compiling unicode-bidi v0.3.15
   Compiling tendril v0.4.3
   Compiling idna v0.5.0
   Compiling dtoa-short v0.3.5
   Compiling form_urlencoded v1.2.1
   Compiling toml v0.8.2
   Compiling string_cache v0.8.7
   Compiling phf v0.8.0
   Compiling ctor v0.2.8
   Compiling aho-corasick v1.1.3
   Compiling phf v0.10.1
   Compiling generic-array v0.14.7
   Compiling camino v1.1.9
   Compiling stable_deref_trait v1.2.0
   Compiling itoa v0.4.8
   Compiling bytemuck v1.17.0
   Compiling hashbrown v0.12.3
   Compiling nodrop v0.1.14
   Compiling unic-char-range v0.9.0
   Compiling regex-syntax v0.8.4
   Compiling anyhow v1.0.86
   Compiling matches v0.1.10
   Compiling alloc-no-stdlib v2.0.4
   Compiling unic-common v0.9.0
   Compiling unic-ucd-version v0.9.0
   Compiling alloc-stdlib v0.2.2
   Compiling unic-char-property v0.9.0
   Compiling servo_arc v0.1.1
   Compiling winapi-util v0.1.9
   Compiling url v2.5.2
   Compiling regex-automata v0.4.7
   Compiling serde_derive_internals v0.29.1
   Compiling uuid v1.10.0
   Compiling fxhash v0.2.1
   Compiling schemars v0.8.21
   Compiling thin-slice v0.1.1
   Compiling cfb v0.7.3
   Compiling schemars_derive v0.8.21
   Compiling regex v1.10.6
   Compiling erased-serde v0.4.5
   Compiling same-file v1.0.6
   Compiling unic-ucd-ident v0.9.0
   Compiling brotli-decompressor v4.0.1
   Compiling jsonptr v0.4.7
   Compiling cargo-platform v0.1.8
   Compiling arrayvec v0.7.6
   Compiling dyn-clone v1.0.17
   Compiling shlex v1.3.0
   Compiling cc v1.1.14
   Compiling brotli v6.0.0
   Compiling symphonia-core v0.5.4
   Compiling json-patch v2.0.0
   Compiling cargo_metadata v0.18.1
   Compiling urlpattern v0.2.0
   Compiling walkdir v2.5.0
   Compiling serde-untagged v0.1.6
   Compiling kuchikiki v0.8.2
   Compiling windows-targets v0.48.5
   Compiling infer v0.15.0
   Compiling serde_with v3.9.0
   Compiling phf v0.11.2
   Compiling dunce v1.0.5
   Compiling futures-sink v0.3.30
   Compiling glob v0.3.1
   Compiling windows-sys v0.48.0
   Compiling vswhom-sys v0.1.2
   Compiling tracing-core v0.1.32
   Compiling tauri-utils v2.0.0-rc.6
   Compiling windows-result v0.2.0
   Compiling pin-utils v0.1.0
   Compiling windows-strings v0.1.0
   Compiling futures-channel v0.3.30
   Compiling futures-macro v0.3.30
   Compiling tracing-attributes v0.1.27
   Compiling concurrent-queue v2.5.0
   Compiling futures-task v0.3.30
   Compiling futures-util v0.3.30
   Compiling tracing v0.1.40
   Compiling parking v2.2.0
   Compiling vswhom v0.1.0
   Compiling winreg v0.52.0
   Compiling http v1.1.0
   Compiling rustc_version v0.4.0
   Compiling toml_edit v0.19.15
   Compiling bitflags v2.6.0
   Compiling mio v1.0.2
   Compiling socket2 v0.5.7
   Compiling windows-implement v0.58.0
   Compiling tokio-macros v2.4.0
   Compiling windows-interface v0.58.0
   Compiling encoding_rs v0.8.34
   Compiling option-ext v0.2.0
   Compiling dirs-sys v0.4.1
   Compiling windows-core v0.58.0
   Compiling tokio v1.39.3
   Compiling toml v0.7.8
   Compiling symphonia-metadata v0.5.4
   Compiling embed-resource v2.4.3
   Compiling httparse v1.9.4
   Compiling heck v0.5.0
   Compiling tauri-winres v0.1.1
   Compiling windows v0.58.0
   Compiling dirs v5.0.1
   Compiling cargo_toml v0.17.2
   Compiling fastrand v2.1.1
   Compiling raw-window-handle v0.6.2
   Compiling wasm-bindgen-shared v0.2.93
   Compiling tauri-build v2.0.0-rc.6
   Compiling adler2 v2.0.0
   Compiling simd-adler32 v0.3.7
   Compiling miniz_oxide v0.8.0
   Compiling http-body v1.0.1
   Compiling event-listener v5.3.1
   Compiling dpi v0.1.1
   Compiling webview2-com-sys v0.33.0
   Compiling pin-project-internal v1.1.5
   Compiling crc32fast v1.4.2
   Compiling try-lock v0.2.5
   Compiling native-tls v0.2.12
   Compiling bumpalo v3.16.0
   Compiling winapi v0.3.9
   Compiling adler v1.0.2
   Compiling miniz_oxide v0.7.4
   Compiling wasm-bindgen-backend v0.2.93
   Compiling pin-project v1.1.5
   Compiling want v0.3.1
   Compiling flate2 v1.0.33
   Compiling event-listener-strategy v0.5.2
   Compiling fdeflate v0.3.4
   Compiling block-buffer v0.10.4
   Compiling crypto-common v0.1.6
   Compiling tauri v2.0.0-rc.6
   Compiling symphonia-utils-xiph v0.5.4
   Compiling tauri-plugin v2.0.0-rc.6
   Compiling schannel v0.1.24
   Compiling errno v0.3.9
   Compiling windows-version v0.1.1
   Compiling tower-layer v0.3.3
   Compiling cfg_aliases v0.2.1
   Compiling unicode-segmentation v1.11.0
   Compiling tower-service v0.3.3
   Compiling tower v0.4.13
   Compiling softbuffer v0.4.5
   Compiling digest v0.10.7
   Compiling png v0.17.13
   Compiling wasm-bindgen-macro-support v0.2.93
   Compiling hyper v1.4.1
   Compiling futures-lite v2.3.0
   Compiling webview2-com-macros v0.8.0
   Compiling crossbeam-channel v0.5.13
   Compiling tauri-runtime v2.0.0-rc.6
   Compiling wry v0.42.0
   Compiling cpufeatures v0.2.13
   Compiling rustix v0.38.34
   Compiling wasm-bindgen v0.2.93
   Compiling io-lifetimes v1.0.11
   Compiling sha2 v0.10.8
   Compiling webview2-com v0.33.0
   Compiling wasm-bindgen-macro v0.2.93
   Compiling hyper-util v0.1.7
   Compiling ico v0.3.0
   Compiling tokio-native-tls v0.3.1
   Compiling tauri-plugin-fs v2.0.0-rc.0
   Compiling http-body-util v0.1.2
   Compiling polling v2.8.0
   Compiling instant v0.1.13
   Compiling base64 v0.22.1
   Compiling event-listener v2.5.3
   Compiling atomic-waker v1.1.2
   Compiling tauri-runtime-wry v2.0.0-rc.6
   Compiling rustix v0.37.27
   Compiling rustls-pki-types v1.8.0
   Compiling async-task v4.7.1
   Compiling rustls-pemfile v2.1.3
   Compiling tauri-codegen v2.0.0-rc.6
   Compiling piper v0.2.4
   Compiling tao v0.29.1
   Compiling hyper-tls v0.6.0
   Compiling keyboard-types v0.7.0
   Compiling async-channel v2.3.1
   Compiling async-lock v3.4.0
   Compiling tokio-util v0.7.11
   Compiling serde_urlencoded v0.7.1
   Compiling polling v3.7.3
   Compiling windows-registry v0.2.0
   Compiling serialize-to-javascript-impl v0.1.1
   Compiling sync_wrapper v1.0.1
   Compiling async-io v1.13.0
   Compiling windows-result v0.1.2
   Compiling fastrand v1.9.0
   Compiling libm v0.2.8
   Compiling waker-fn v1.2.0
   Compiling ipnet v2.9.0
   Compiling binrw_derive v0.11.2
   Compiling paste v1.0.15
   Compiling mime v0.3.17
   Compiling reqwest v0.12.7
   Compiling futures-lite v1.13.0
   Compiling windows-core v0.54.0
   Compiling serialize-to-javascript v0.1.1
   Compiling async-io v2.3.4
   Compiling muda v0.14.1
   Compiling blocking v1.6.1
   Compiling tauri-macros v2.0.0-rc.5
   Compiling async-executor v1.13.0
   Compiling async-lock v2.8.0
   Compiling socket2 v0.4.10
   Compiling window-vibrancy v0.5.1
   Compiling tauri-plugin-dialog v2.0.0-rc.2
   Compiling serde_repr v0.1.19
   Compiling static_assertions v1.1.0
   Compiling state v0.6.0
   Compiling binrw v0.11.2
   Compiling either v1.13.0
   Compiling owo-colors v3.5.0
   Compiling cpal v0.15.3
   Compiling rfd v0.14.1
   Compiling extended v0.1.0
   Compiling regex-syntax v0.6.29
   Compiling symphonia-format-riff v0.5.4
   Compiling microfft v0.5.1
   Compiling sha1 v0.10.6
   Compiling regex-automata v0.1.10
   Compiling async-global-executor v2.4.1
   Compiling windows v0.54.0
   Compiling js-sys v0.3.70
   Compiling async-channel v1.9.0
   Compiling symphonia-format-isomp4 v0.5.4
   Compiling symphonia-codec-vorbis v0.5.4
   Compiling symphonia-bundle-flac v0.5.4
   Compiling symphonia-format-ogg v0.5.4
   Compiling symphonia-format-mkv v0.5.4
   Compiling symphonia-format-caf v0.5.4
   Compiling symphonia-bundle-mp3 v0.5.4
   Compiling futures-executor v0.3.30
   Compiling symphonia-codec-alac v0.5.4
   Compiling symphonia-codec-adpcm v0.5.4
   Compiling symphonia-codec-aac v0.5.4
   Compiling symphonia-codec-pcm v0.5.4
   Compiling realfft v3.3.0
   Compiling http v0.2.12
   Compiling float-cmp v0.9.0
   Compiling kv-log-macro v1.0.7
   Compiling array-init v2.1.0
   Compiling data-encoding v2.6.0
   Compiling overload v0.1.1
   Compiling dasp_sample v0.11.0
   Compiling nu-ansi-term v0.46.0
   Compiling tungstenite v0.20.1
   Compiling async-std v1.12.0
   Compiling spectrum-analyzer v1.5.0
   Compiling rubato v0.15.0
   Compiling symphonia v0.5.4
   Compiling futures v0.3.30
   Compiling serde-wasm-bindgen v0.5.0
   Compiling matchers v0.1.0
   Compiling console_error_panic_hook v0.1.7
   Compiling amll-player v0.0.0 (D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player\src-tauri)
   Compiling tempfile v3.12.0
   Compiling tracing-log v0.2.0
   Compiling sharded-slab v0.1.7
   Compiling serde_bytes v0.11.15
   Compiling ringbuf v0.3.3
   Compiling thread_local v1.1.8
   Compiling md5 v0.7.0
   Compiling concat-string v1.0.1
   Compiling segmap v0.1.0
   Compiling rb v0.4.1
   Compiling tracing-subscriber v0.3.18
   Compiling ws-protocol v0.0.2 (D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\ws-protocol)
   Compiling amll-player-core v0.1.0 (D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player-core)
warning: unused import: `meta::StandardTagKey`
  --> D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player-core\src\player.rs:17:5
   |
17 |     meta::StandardTagKey,
   |     ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `tracing`
 --> D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player-core\src\utils.rs:5:5
  |
5 | use tracing::*;
  |     ^^^^^^^

warning: method `clear` is never used
  --> D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player-core\src\fft_player.rs:73:12
   |
56 | impl FFTPlayer {
   | -------------- method in this implementation
...
73 |     pub fn clear(&mut self) {
   |            ^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

   Compiling async-tungstenite v0.23.0
warning: `amll-player-core` (lib) generated 3 warnings (run `cargo fix --lib -p amll-player-core` to apply 1 suggestion)
    Finished `release` profile [optimized] target(s) in 6m 15s
    Built application at: D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player\src-tauri\target\release\amll-player.exe
    Info Verifying wix package
    Downloading https://github.com/wixtoolset/wix3/releases/download/wix3141rtm/wix314-binaries.zip
    Info validating hash
    Info extracting WIX
    Info Target: x64
    Running candle for "main.wxs"
    Running light to produce D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player\src-tauri\target\release\bundle\msi\AMLL Player_0.0.1_x64_en-US.msi
    Info Verifying NSIS package
    Downloading https://github.com/tauri-apps/binary-releases/releases/download/nsis-3/nsis-3.zip
    Info validating hash
    Info extracting NSIS
    Downloading https://github.com/tauri-apps/nsis-tauri-utils/releases/download/nsis_tauri_utils-v0.4.1/nsis_tauri_utils.dll
    Info validating hash
    Info Target: x64
    Running makensis.exe to produce D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player\src-tauri\target\release\bundle\nsis\AMLL Player_0.0.1_x64-setup.exe
    Finished 2 bundles at:
        D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player\src-tauri\target\release\bundle\msi\AMLL Player_0.0.1_x64_en-US.msi
        D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player\src-tauri\target\release\bundle\nsis\AMLL Player_0.0.1_x64-setup.exe

Looking for artifacts in:
D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player\src-tauri\target\release\bundle\msi\AMLL Player_0.0.1_x64_en-US.msi
D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player\src-tauri\target\release\bundle\msi\AMLL Player_0.0.1_x64_en-US.msi.sig
D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player\src-tauri\target\release\bundle\msi\AMLL Player_0.0.1_x64_en-US.msi.zip
D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player\src-tauri\target\release\bundle\msi\AMLL Player_0.0.1_x64_en-US.msi.zip.sig
D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player\src-tauri\target\release\bundle\nsis\AMLL Player_0.0.1_x64-setup.exe
D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player\src-tauri\target\release\bundle\nsis\AMLL Player_0.0.1_x64-setup.exe.sig
D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player\src-tauri\target\release\bundle\nsis\AMLL Player_0.0.1_x64-setup.nsis.zip
D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player\src-tauri\target\release\bundle\nsis\AMLL Player_0.0.1_x64-setup.nsis.zip.sig
Found artifacts:
D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player\src-tauri\target\release\bundle\msi\AMLL Player_0.0.1_x64_en-US.msi
D:\a\applemusic-like-lyrics\applemusic-like-lyrics\packages\player\src-tauri\target\release\bundle\nsis\AMLL Player_0.0.1_x64-setup.exe
No releaseId or tagName provided, skipping all uploads...
2s
Run actions/upload-artifact@v3
With the provided path, there will be 1 file uploaded
Starting artifact upload
For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging
Artifact name is valid!
Container for artifact "AMLL Player windows-x86_64" successfully created. Starting upload of file(s)
Total size of all the files uploaded is 3021983 bytes
File upload process has finished. Finalizing the artifact upload
Artifact has been finalized. All files have been successfully uploaded!

The raw size of all the files that were specified for upload is 3215360 bytes
The size of all the files that were uploaded is 3021983 bytes. This takes into account any gzip compression used to reduce the upload size, time and storage

Note: The size of downloaded zips can differ significantly from the reported size. For more information see: https://github.com/actions/upload-artifact#zipped-artifact-downloads 

Artifact AMLL Player windows-x86_64 has been successfully uploaded!
0s
Post job cleanup.
Cache hit occurred on the primary key node-cache-Windows-pnpm-ac65d0f26386d767e48f2fbbae89afdbc9b2ad7bb90a7d1b68be7695c0e0ee21, not saving cache.
0s
Post job cleanup.
Pruning is unnecessary.
12s
Post job cleanup.
Cache hit occurred on the primary key Windows-cargo-9e76c400076bf9ed3f8bc7fa42b36a915d48a540a36af045ced300e7b58d7941, not saving cache.
1s
Post job cleanup.
"C:\Program Files\Git\bin\git.exe" version
git version 2.46.0.windows.1
Temporarily overriding HOME='D:\a\_temp\8039ffcb-3cc9-42c0-8964-71400ef64e29' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
"C:\Program Files\Git\bin\git.exe" config --global --add safe.directory D:\a\applemusic-like-lyrics\applemusic-like-lyrics
"C:\Program Files\Git\bin\git.exe" config --local --name-only --get-regexp core\.sshCommand
"C:\Program Files\Git\bin\git.exe" submodule foreach --recursive "sh -c \"git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :\""
"C:\Program Files\Git\bin\git.exe" config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
http.https://github.com/.extraheader
"C:\Program Files\Git\bin\git.exe" config --local --unset-all http.https://github.com/.extraheader
"C:\Program Files\Git\bin\git.exe" submodule foreach --recursive "sh -c \"git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :\""
0s
Cleaning up orphan processes
Terminate orphan process: pid (6104) (vctip)